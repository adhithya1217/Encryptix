import tkinter as tk
from tkinter import messagebox

class Contact:
    def __init__(self, name, phone, email, address):
        self.name = name
        self.phone = phone
        self.email = email
        self.address = address

class ContactManager:
    def __init__(self):
        self.contacts = []

    def add_contact(self, contact):
        self.contacts.append(contact)

    def delete_contact(self, index):
        del self.contacts[index]

    def update_contact(self, index, contact):
        self.contacts[index] = contact

    def search_contact(self, query):
        results = []
        for contact in self.contacts:
            if query.lower() in contact.name.lower() or query in contact.phone:
                results.append(contact)
        return results

    def get_contacts(self):
        return self.contacts

class ContactApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Contact Manager")

        self.contact_manager = ContactManager()

        self.name_label = tk.Label(root, text="Name:")
        self.name_label.grid(row=0, column=0)
        self.name_entry = tk.Entry(root)
        self.name_entry.grid(row=0, column=1)

        self.phone_label = tk.Label(root, text="Phone:")
        self.phone_label.grid(row=1, column=0)
        self.phone_entry = tk.Entry(root)
        self.phone_entry.grid(row=1, column=1)

        self.email_label = tk.Label(root, text="Email:")
        self.email_label.grid(row=2, column=0)
        self.email_entry = tk.Entry(root)
        self.email_entry.grid(row=2, column=1)

        self.address_label = tk.Label(root, text="Address:")
        self.address_label.grid(row=3, column=0)
        self.address_entry = tk.Entry(root)
        self.address_entry.grid(row=3, column=1)

        self.add_button = tk.Button(root, text="Add Contact", command=self.add_contact)
        self.add_button.grid(row=4, column=0, columnspan=2)

        self.search_label = tk.Label(root, text="Search:")
        self.search_label.grid(row=5, column=0)
        self.search_entry = tk.Entry(root)
        self.search_entry.grid(row=5, column=1)
        self.search_button = tk.Button(root, text="Search", command=self.search_contact)
        self.search_button.grid(row=5, column=2)

        self.contact_listbox = tk.Listbox(root, width=50)
        self.contact_listbox.grid(row=6, column=0, columnspan=3)

        self.delete_button = tk.Button(root, text="Delete Contact", command=self.delete_contact)
        self.delete_button.grid(row=7, column=0)
        self.update_button = tk.Button(root, text="Update Contact", command=self.update_contact)
        self.update_button.grid(row=7, column=1)

        self.load_contacts()

    def add_contact(self):
        name = self.name_entry.get()
        phone = self.phone_entry.get()
        email = self.email_entry.get()
        address = self.address_entry.get()
        contact = Contact(name, phone, email, address)
        self.contact_manager.add_contact(contact)
        self.update_contact_list()
        self.clear_entries()

    def delete_contact(self):
        selection = self.contact_listbox.curselection()
        if selection:
            index = selection[0]
            self.contact_manager.delete_contact(index)
            self.update_contact_list()

    def update_contact(self):
        selection = self.contact_listbox.curselection()
        if selection:
            index = selection[0]
            name = self.name_entry.get()
            phone = self.phone_entry.get()
            email = self.email_entry.get()
            address = self.address_entry.get()
            contact = Contact(name, phone, email, address)
            self.contact_manager.update_contact(index, contact)
            self.update_contact_list()
            self.clear_entries()

    def search_contact(self):
        query = self.search_entry.get()
        results = self.contact_manager.search_contact(query)
        self.contact_listbox.delete(0, tk.END)
        for contact in results:
            self.contact_listbox.insert(tk.END, f"{contact.name} - {contact.phone}")

    def update_contact_list(self):
        self.contact_listbox.delete(0, tk.END)
        for contact in self.contact_manager.get_contacts():
            self.contact_listbox.insert(tk.END, f"{contact.name} - {contact.phone}")

    def clear_entries(self):
        self.name_entry.delete(0, tk.END)
        self.phone_entry.delete(0, tk.END)
        self.email_entry.delete(0, tk.END)
        self.address_entry.delete(0, tk.END)

    def load_contacts(self):
        # Load contacts from a database or file
        pass

root = tk.Tk()
app = ContactApp(root)
root.mainloop()
